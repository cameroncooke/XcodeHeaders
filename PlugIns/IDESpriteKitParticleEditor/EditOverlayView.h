//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "DVTInvalidation.h"
#import "SKDocumentDelegate.h"
#import "SKSceneDelegate.h"

@class DVTStackBacktrace, NSArray, NSMenu, NSMutableArray, NSString, SKDocumentViewController, SKEditView, SKNode, SKScene;

@interface EditOverlayView : NSView <DVTInvalidation, SKSceneDelegate, SKDocumentDelegate>
{
    BOOL _isMidCommand;
    SKScene *_pausePlaySceneCopy;
    SKNode *_selectedNode;
    NSMutableArray *_selectedNodes;
    BOOL _isTrackingTouch;
    BOOL _isPBDragging;
    BOOL _isObjectMoved;
    unsigned long long _mainTouchID;
    struct CGPoint _touchBeganPoint;
    struct CGPoint _touchPrevPoint;
    struct CGPoint _touchCurrentPoint;
    struct CGPoint _prevTouchInView;
    struct CGPoint _currTouchInView;
    struct CGColor *_grayColor;
    struct CGColor *_blueColor;
    struct CGColor *_blackColor;
    struct CGColor *_whiteColor;
    struct CGColor *_goldColor;
    struct CGColor *_greenColor;
    struct CGColor *_snappingColor;
    struct CGColor *_selectionColor;
    struct CGColor *_selectionFillColor;
    struct CGContext *_ctx;
    struct CGPoint ll;
    struct CGPoint lm;
    struct CGPoint lr;
    struct CGPoint ml;
    struct CGPoint mm;
    struct CGPoint mr;
    struct CGPoint ul;
    struct CGPoint um;
    struct CGPoint ur;
    struct CGPoint rh;
    struct CGPoint ap;
    BOOL _drawingSelection;
    BOOL _snappingInX;
    BOOL _snappingInY;
    float _snapXValue;
    float _snapYValue;
    BOOL _isTrackingTwoFingerGesture;
    id _twoFingerGestureTouch1ID;
    struct CGPoint _prevTwoFingerGestureLocation;
    double _startRotation;
    struct CGPoint _startScale;
    struct CGSize _startSize;
    struct CGPoint _startPosition;
    struct CGPoint _startAnchorPoint;
    struct CGPoint _startYVec;
    struct CGPoint _startXVec;
    int _editorMode;
    struct PolyEditor _polyEditor;
    struct vector<NodeMovePair, std::__1::allocator<NodeMovePair>> _nodeMoveQueue;
    struct unique_ptr<ManipulationEvent, std::__1::default_delete<ManipulationEvent>> _latestManipulationDragEvent;
    struct unique_ptr<ManipulationEvent, std::__1::default_delete<ManipulationEvent>> _touchEndEvent;
    struct vector<ZoomPositionPair, std::__1::allocator<ZoomPositionPair>> _zoomQueue;
    struct CGPoint _startMovePosition;
    NSMenu *_rightClickContextMenu;
    int _touchMoveCount;
    NSMutableArray *_observedNodes;
    int _handleBeingManipulated;
    SKNode *_manipulatedNode;
    NSMutableArray *_selectedObjectPopovers;
    long long _lastEnabledFeatureState;
    long long _lastEnabledPropertyManipulationState;
    struct map<std::__1::basic_string<char>, CGImage *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGImage *>>> _overlayImageMap;
    double _cachedViewScale;
    struct CGPoint _cachedViewTranslation;
    struct CGPoint _userViewTranslation;
    struct CGPoint _lastViewTranslation;
    double _lastViewScale;
    int _numPastesSinceLastCopy;
    BOOL _enabled;
    SKScene *_scene;
    SKEditView *_skEditView;
    SKDocumentViewController *_documentViewController;
    id <EditOverlayDelegate> _delegate;
    long long _enabledFeatures;
    long long _enabledPropertyManipulations;
}

+ (id)getEditOverlayViewModeDisplayName:(int)arg1;
+ (void)initialize;
@property(nonatomic) long long enabledPropertyManipulations; // @synthesize enabledPropertyManipulations=_enabledPropertyManipulations;
@property(nonatomic) long long enabledFeatures; // @synthesize enabledFeatures=_enabledFeatures;
@property(nonatomic) __weak id <EditOverlayDelegate> delegate; // @synthesize delegate=_delegate;
@property int editorMode; // @synthesize editorMode=_editorMode;
@property(nonatomic) __weak SKDocumentViewController *documentViewController; // @synthesize documentViewController=_documentViewController;
@property(retain, nonatomic) NSArray *selectedNodes; // @synthesize selectedNodes=_selectedNodes;
@property(retain, nonatomic) SKNode *selectedNode; // @synthesize selectedNode=_selectedNode;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) __weak SKEditView *skEditView; // @synthesize skEditView=_skEditView;
@property(nonatomic) __weak SKScene *scene; // @synthesize scene=_scene;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)selectNodeAtTouchCurrentPoint;
- (void)unlockNodeAtTouchCurrentPoint;
- (void)lockSelectedNodes;
- (void)duplicate:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)didEvaluateActionsForScene:(id)arg1;
- (void)thunkPhysicsRecursive:(id)arg1;
- (void)_processZoomQueue;
- (void)_processNodeMoveQueue;
- (void)resetPolygonEditor;
- (void)bringSelectedNodesToFront;
- (void)pushSelectedNodesToBack;
- (void)handleSceneUndoEvent:(id)arg1;
- (void)contextMenuAddNodePressed;
- (id)info:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unobserveAllNodesAndChildren;
- (void)observeAllNodesAndChildren;
- (void)nodeTextureDidChange:(id)arg1;
- (void)nodeNameDidChange:(id)arg1;
- (void)unobserveNode:(id)arg1;
- (void)observeNode:(id)arg1;
- (float)getGlobalZForNode:(id)arg1;
- (id)getNodeToSelectAtPoint:(struct CGPoint)arg1;
- (void)toggleSelectNode:(id)arg1;
- (void)_deselectAllNodesSkipSync:(BOOL)arg1;
- (void)deselectAllNodes;
- (void)closeSelectedNodeNamePopover:(id)arg1;
- (void)cleanupSelectedObjectPopovers;
- (void)deselectNode:(id)arg1;
- (void)updateSelectionPopover;
- (void)_selectNode:(id)arg1 updateSelectionPopover:(BOOL)arg2 skipSync:(BOOL)arg3;
- (void)selectNode:(id)arg1;
- (void)drawBoundsBox;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawSceneBounds;
- (void)drawFrustumForCamera:(id)arg1;
- (void)drawNodeOverlayImageRecursive:(id)arg1;
- (void)drawParentChildLines;
- (void)drawSelectionRect;
- (void)drawSnapping;
- (void)drawHandleAt:(struct CGPoint)arg1 forNode:(id)arg2;
- (void)generateHandlePoints;
- (void)displayScene:(id)arg1;
- (void)drawAnchorPointHandle;
- (void)drawRotationHandle;
- (BOOL)point:(struct CGPoint)arg1 isWithinRadius:(double)arg2 ofPoint:(struct CGPoint)arg3;
- (void)liveReloadScene;
- (BOOL)togglePlayPause;
- (void)restoreSelectionFromUIDs:(id)arg1;
- (id)selectionUIDs;
- (void)reloadSceneState;
- (void)_transferPersistantPropertiesFromScene:(id)arg1 toScene:(id)arg2;
- (void)saveSceneState;
- (BOOL)isClickingOnHandle:(struct CGPoint)arg1;
- (BOOL)isOpaque;
- (void)pan:(float)arg1 deltaY:(float)arg2;
- (void)refreshZoomState;
- (void)restoreZoomToNative;
- (void)restoreZoomToNativeMaintainCenter;
- (void)zoom:(float)arg1 towardScenePosition:(struct CGPoint)arg2;
- (void)zoom:(float)arg1;
- (void)doSnappingForNodeMovement:(id)arg1 lastPosition:(struct CGPoint)arg2;
- (void)doNodeSnappingToPoint:(id)arg1 sceneRect:(struct CGRect)arg2 targetValue:(float)arg3 axis:(int)arg4 side:(int)arg5 resultOut:(struct SnapResult *)arg6;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)stopAllActionsOnSelectedNodes;
- (void)rotateSelectedNodesCounterClockwise;
- (void)rotateSelectedNodesClockwise;
- (void)processManipulationEvents;
- (void)rightMouseDown:(id)arg1;
- (void)touchCancelled:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEndedPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEndedManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)_processTouchEndWithTouchID:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEnded:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedIKManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)_processManipulationEventWithTouchID:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3 lastMouseEventModFlags:(unsigned long long)arg4 lastMouseDownEvent:(id)arg5 lastMouseDragEvent:(id)arg6;
- (void)touchMovedManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMoved:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganIKManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBegan:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)keyDownPolygon:(id)arg1;
- (void)keyDownManipulate:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)assignNodeUID:(id)arg1;
- (void)setActionsOnNodeAndChildren:(id)arg1;
- (void)addNode:(id)arg1;
- (void)pasteCopiedNode:(id)arg1;
- (void)copySelectedNode:(id)arg1;
- (void)cutSelectedNode:(id)arg1;
- (void)duplicateSelectedNode:(id)arg1;
- (void)deleteSelectedNode:(id)arg1;
- (void)syncDocumentViewController:(id)arg1;
- (BOOL)canPropertyBeManipulated:(long long)arg1;
- (BOOL)isFeatureEnabled:(long long)arg1;
- (void)setFeatureDisabled:(long long)arg1;
@property int handleBeingManipulated;
- (long long)handleTypeToProperty:(int)arg1;
- (struct CGImage *)getSelectedOverlayImageForNode:(id)arg1;
- (struct CGImage *)getOverlayImageForNode:(id)arg1;
- (struct CGImage *)getOverlayImageForImageName:(id)arg1;
- (void)releaseOverlayImages;
- (id)getOverlayTextColorForNodeName:(id)arg1;
- (BOOL)doesNodeTypeDrawAnchor:(id)arg1;
- (BOOL)canNodeTypeResize:(id)arg1;
- (BOOL)canNodeTypeRotate:(id)arg1;
- (void)endCommand;
- (void)beginCommand;
- (void)primitiveInvalidate;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

