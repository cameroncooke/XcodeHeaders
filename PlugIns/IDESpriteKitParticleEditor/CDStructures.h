//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class SKNode;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPath;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct ManipulationEvent;

struct NSObject {
    Class _field1;
};

struct NodeMovePair;

struct PolyEditor {
    struct CGPath *_path;
    _Bool _dirty;
    struct CGPoint _continuityButtonPos;
    struct CGPoint _lockButtonPos;
    unsigned long long _editIndex;
    int _editPart;
    _Bool _filled;
    _Bool _closed;
    _Bool _smoothPath;
    struct vector<PolyEditor::Vertex, std::__1::allocator<PolyEditor::Vertex>> _verts;
    SKNode *_offsetNode;
    struct CGPoint _lastOffsetPosition;
    struct Vertex _firstVert;
};

struct SnapResult {
    _Bool _field1;
    _Bool _field2;
    float _field3;
    float _field4;
};

struct Vertex {
    struct CGPoint point;
    struct CGPoint tangentIn;
    struct CGPoint tangentOut;
    int tangency;
};

struct ZoomPositionPair;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct map<std::__1::basic_string<char>, CGImage *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGImage *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGImage *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct unique_ptr<ManipulationEvent, std::__1::default_delete<ManipulationEvent>> {
    struct __compressed_pair<ManipulationEvent *, std::__1::default_delete<ManipulationEvent>> {
        struct ManipulationEvent *__first_;
    } __ptr_;
};

struct vector<NodeMovePair, std::__1::allocator<NodeMovePair>> {
    struct NodeMovePair *__begin_;
    struct NodeMovePair *__end_;
    struct __compressed_pair<NodeMovePair *, std::__1::allocator<NodeMovePair>> {
        struct NodeMovePair *__first_;
    } __end_cap_;
};

struct vector<PolyEditor::Vertex, std::__1::allocator<PolyEditor::Vertex>> {
    struct Vertex *__begin_;
    struct Vertex *__end_;
    struct __compressed_pair<PolyEditor::Vertex *, std::__1::allocator<PolyEditor::Vertex>> {
        struct Vertex *__first_;
    } __end_cap_;
};

struct vector<ZoomPositionPair, std::__1::allocator<ZoomPositionPair>> {
    struct ZoomPositionPair *__begin_;
    struct ZoomPositionPair *__end_;
    struct __compressed_pair<ZoomPositionPair *, std::__1::allocator<ZoomPositionPair>> {
        struct ZoomPositionPair *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    struct CGPoint _field7;
    struct CGPoint _field8;
    struct CGPoint _field9;
    struct CGPoint _field10;
    struct CGPoint _field11;
    double _field12;
    struct CGPoint _field13;
    struct CGSize _field14;
    struct CGPoint _field15;
    struct CGPoint _field16;
    struct CGPoint _field17;
    struct CGPoint _field18;
} CDStruct_76845b71;

