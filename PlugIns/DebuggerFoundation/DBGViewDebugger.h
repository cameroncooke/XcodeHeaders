//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "DBGViewDebuggerDataSourceManager.h"
#import "DVTInvalidation.h"

@class DBGViewWindow, DVTStackBacktrace, IDEDebugSession, NSArray, NSMapTable, NSString;

@interface DBGViewDebugger : NSObject <DVTInvalidation, DBGViewDebuggerDataSourceManager>
{
    NSArray *_windows;
    NSMapTable *_dataSourcesForViewObjectsMap;
    int _loadedState;
    IDEDebugSession *_debugSession;
    id <DBGViewDescriber> _viewDescriber;
    DBGViewWindow *_primaryWindow;
    double _percentLoaded;
}

+ (Class)viewDescriberClassForPlatform:(id)arg1;
+ (void)initialize;
@property int loadedState; // @synthesize loadedState=_loadedState;
@property double percentLoaded; // @synthesize percentLoaded=_percentLoaded;
@property(readonly) DBGViewWindow *primaryWindow; // @synthesize primaryWindow=_primaryWindow;
@property(readonly, nonatomic) NSArray *windows; // @synthesize windows=_windows;
@property(readonly) id <DBGViewDescriber> viewDescriber; // @synthesize viewDescriber=_viewDescriber;
@property(retain) IDEDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)setDataSource:(id)arg1 forViewObject:(id)arg2;
- (id)dataSourceForViewObject:(id)arg1;
- (id)_viewDescriberForPlatform:(id)arg1 debugSession:(id)arg2;
- (void)_initializeStructuresIfNecessary;
- (void)willFetchViewInfo;
- (void)fetchWindowsIfNecessary;
- (void)_updateViewDebuggingHierarchy:(id)arg1 primaryWindow:(id)arg2 andLoadedState:(int)arg3;
- (id)initWithPlatform:(id)arg1 debugSession:(id)arg2 viewDescriber:(id)arg3;
- (id)initWithPlatform:(id)arg1 debugSession:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

