//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class IDEPlaygroundSimDeviceFramebufferBackingStore, NSMachPort, NSMapTable, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, SimDevice;

@interface IDEPlaygroundSimDeviceFramebufferService : NSObject
{
    IDEPlaygroundSimDeviceFramebufferBackingStore *_framebufferBackingStore;
    NSObject<OS_dispatch_source> *_receiveSource;
    NSObject<OS_dispatch_queue> *_receiveQueue;
    NSObject<OS_dispatch_queue> *_executionQueue;
    NSMapTable *_clientsToCallbackQueue;
    NSMachPort *_port;
    struct CGSize _size;
    SimDevice *_device;
}

+ (id)tvOutFramebufferServiceForDevice:(id)arg1 size:(struct CGSize)arg2 error:(id *)arg3;
+ (id)mainScreenFramebufferServiceForDevice:(id)arg1 error:(id *)arg2;
+ (id)framebufferServiceWithName:(id)arg1 size:(struct CGSize)arg2 device:(id)arg3 error:(id *)arg4;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *executionQueue; // @synthesize executionQueue=_executionQueue;
@property(readonly, nonatomic) SimDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)_ON_EXECUTION_QUEUE_didRotateToAngle:(double)arg1;
- (void)_ON_EXECUTION_QUEUE_didDirtyFramebufferRegion:(struct CGRect)arg1;
- (id)_ON_EXECUTION_QUEUE_framebufferBackingStoreCreatingIfNeeded;
- (BOOL)_ON_EXECUTION_QUEUE_updateFramebufferBackingStore:(id *)arg1;
- (void)_ON_EXECUTION_QUEUE_framebufferBackingStoreSizeChange:(struct CGSize)arg1;
- (void)_ON_EXECUTION_QUEUE_teardownFramebufferBackingStore;
- (void)_ON_RECEIVE_QUEUE_didCancelReceiveSource;
- (void)_ON_RECEIVE_QUEUE_processMachMessage:(void *)arg1;
- (BOOL)_ON_RECEIVE_QUEUE_sendReplyToRenderServer:(struct PurpleFBMessage *)arg1 error:(id *)arg2;
- (void)_ON_RECEIVE_QUEUE_processMachMessages;
- (void)_ON_EXECUTION_QUEUE_suspend;
- (void)suspend;
- (void)resume;
- (void)_sendErrorToClients:(id)arg1;
- (id)_ON_EXECUTION_QUEUE_callbackQueueForClient:(id)arg1;
- (void)unregisterClient:(id)arg1;
- (void)registerClient:(id)arg1 onQueue:(id)arg2;
- (BOOL)sizeChanged:(struct CGSize)arg1;
- (void)assertOnExecutionQueue;
- (void)invalidate;
- (id)initWithPort:(id)arg1 receiveSource:(id)arg2 receiveQueue:(id)arg3 size:(struct CGSize)arg4 device:(id)arg5;

@end

